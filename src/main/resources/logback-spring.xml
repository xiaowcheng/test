<?xml version="1.0" encoding="UTF-8" ?>
<!--
    scan:当此属性设置为true时，配置文件如果发生改变，将会被重新加载，默认值为true。
    scanPeriod:设置监测配置文件是否有修改的时间间隔，如果没有给出时间单位，默认单位是毫秒。当scan为true时，此属性生效。默认的时间间隔为1分钟。
    debug:当此属性设置为true时，将打印出logback内部日志信息，实时查看logback运行状态。默认值为false。
-->
<configuration scan="true" scanPeriod="60 seconds" debug="false">

    <include resource="org/springframework/boot/logging/logback/defaults.xml"/>

    <!-- 应用名称 -->
    <springProperty scope="context" name="APP_NAME" source="spring.application.name"/>

    <property name="CONSOLE_LOG_FORMAT"
              value="%clr(%d{yyyy-MM-dd HH:mm:ss.SSS}){faint} %clr(${LOG_LEVEL_PATTERN:-%5p}) %clr(${PID:- }){magenta} %clr(---){faint} %clr([%15.15t]){faint} %clr(%-40.40logger){cyan} %clr(:){faint} %m%n%wex" />
    <property name="FILE_LOG_FORMAT"
    value="${FILE_LOG_PATTERN:-%d{yyyy-MM-dd HH:mm:ss.SSS} ${LOG_LEVEL_PATTERN:-%5p} ${PID:- } --- [%t] %logger{39} : %m%n}"/>
    <!-- 日志存放路径 -->
    <property name="LOG_PATH" value="${LOG_PATH:-/var/log/${APP_NAME}}"/>
    <!-- 保留日志的天数 -->
    <property name="MAX_HISTORY" value="${LOG_MAX_HISTORY:-30}"/>
    <!-- 日志文件大小，超出后会自动生成新文件 -->
    <property name="MAX_FILE_SIZE" value="${MAX_FILE_SIZE:-20MB}"/>

    <!-- 控制台日志 -->
    <appender name="CONSOLE_LOG" class="ch.qos.logback.core.ConsoleAppender">
        <encoder>
            <pattern>${CONSOLE_LOG_FORMAT}</pattern>
            <charset>UTF-8</charset>
        </encoder>
    </appender>

    <!-- 每天生成日志文件,文件大小超过${MAX_FILE_SIZE}则新生成一个文件，
        同时将旧文件按${LOG_PATH}/history-info/info.%d{yyyy-MM-dd}.%i.log.gz格式压缩，文件保存${MAX_HISTORY}天 -->
    <appender name="INFO_FILE_LOG" class="ch.qos.logback.core.rolling.RollingFileAppender">
        <!-- 只打印非ERROR级别的日志，线上环境包括INFO、WARN级别 -->
        <filter class="ch.qos.logback.classic.filter.LevelFilter">
            <level>ERROR</level>
            <onMatch>DENY</onMatch>
            <onMismatch>ACCEPT</onMismatch>
        </filter>
        <file>${LOG_PATH}/info.log</file>
        <rollingPolicy class="ch.qos.logback.core.rolling.SizeAndTimeBasedRollingPolicy">
            <fileNamePattern>${LOG_PATH}/history-info/info.%d{yyyy-MM-dd}.%i.log.gz</fileNamePattern>
            <!-- 保存天数 -->
            <maxHistory>${MAX_HISTORY}</maxHistory>
            <!-- 日志文件大小 -->
            <maxFileSize>${MAX_FILE_SIZE}</maxFileSize>
        </rollingPolicy>
        <encoder>
            <pattern>${FILE_LOG_PATTERN}</pattern>
            <charset>UTF-8</charset>
        </encoder>
    </appender>

    <!-- 每天生成日志文件,文件大小超过${MAX_FILE_SIZE}则新生成一个文件，
        同时将旧文件按${LOG_PATH}/history-error/error.%d{yyyy-MM-dd}.%i.log.gz格式压缩，文件保存${MAX_HISTORY}天 -->
    <appender name="ERROR_FILE_LOG" class="ch.qos.logback.core.rolling.RollingFileAppender">
        <!-- 只打印ERROR级别日志 -->
        <filter class="ch.qos.logback.classic.filter.LevelFilter">
            <level>ERROR</level>
            <onMatch>ACCEPT</onMatch>
            <onMismatch>DENY</onMismatch>
        </filter>
        <file>${LOG_PATH}/error.log</file>
        <rollingPolicy class="ch.qos.logback.core.rolling.SizeAndTimeBasedRollingPolicy">
            <fileNamePattern>${LOG_PATH}/history-error/error.%d{yyyy-MM-dd}.%i.log.gz</fileNamePattern>
            <maxHistory>${MAX_HISTORY}</maxHistory>
            <maxFileSize>${MAX_FILE_SIZE}</maxFileSize>
        </rollingPolicy>
        <encoder>
            <pattern>${FILE_LOG_FORMAT}</pattern>
            <charset>UTF-8</charset>
        </encoder>
    </appender>

    <root level="INFO">
        <appender-ref ref="CONSOLE_LOG" />
        <appender-ref ref="INFO_FILE_LOG" />
        <appender-ref ref="ERROR_FILE_LOG" />
    </root>
</configuration>